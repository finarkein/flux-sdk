package io.finarkein.flux.expr;

import lombok.Getter;

import java.util.ArrayList;
import java.util.List;

public class CasesExpr extends Expr {
	@Getter
	private List<Expr> cases;
	@Getter
	private Expr otherwise;

	public CasesExpr(){
		instanceType = InstanceType.CASES;
	}

	public CasesExpr(Expr condition, Object value) {
		this();
		cases = new ArrayList<>(5);
		cases.add(Expr.unary(condition, ExprType.CASE_WHEN, value));
	}

	@Override
	public Expr otherwise(Object value) {
		if (otherwise != null)
			throw new IllegalArgumentException("otherwise clause can only be applied on a expr previously generated by cases when clause");
		this.otherwise = Expr.toExpr(value);
		return this;
	}

	@Override
	public Expr when(Expr condition, Object value) {
		cases.add(Expr.unary(condition, ExprType.CASE_WHEN, value));
		return this;
	}
}